---
- name: Copy docker-compose.yaml to remote host
  copy:
    src: docker-compose.yaml
    dest: /opt/authentik/docker-compose.yaml
    owner: authentik
    group: authentik
    mode: '0644'

- name: Install pip
  apt:
    name: python3-pip
    state: present

- name: Install docker python package
  pip:
    name: docker
    state: present

- name: Create traefik_proxy docker network
  docker_network:
    name: traefik_proxy
    state: present

- name: Check if PG_PASS exists
  shell: grep -q 'PG_PASS' /opt/authentik/.env
  register: pg_pass_exists
  ignore_errors: true

- name: Generate PG_PASS secret
  shell:
    cmd: echo "PG_PASS=$(openssl rand -base64 36)" >> /opt/authentik/.env
  when: pg_pass_exists.rc != 0

- name: Check if AUTHENTIK_SECRET_KEY exists
  shell: grep -q 'AUTHENTIK_SECRET_KEY' /opt/authentik/.env
  register: authentik_secret_key_exists
  ignore_errors: true

- name: Generate AUTHENTIK_SECRET_KEY secret
  shell:
    cmd: echo "AUTHENTIK_SECRET_KEY=$(openssl rand -base64 36)" >> /opt/authentik/.env
  when: authentik_secret_key_exists.rc != 0


- name: Check if CLOUDFLARE_API_EMAIL exists
  shell: grep -q 'CLOUDFLARE_API_EMAIL' /opt/authentik/.env
  register: cloudflare_api_email_exists
  ignore_errors: true

- name: Inject CLOUDFLARE_API_EMAIL secret
  shell:
    cmd: echo "CLOUDFLARE_API_EMAIL={{ lookup('env', 'CLOUDFLARE_API_EMAIL') }}" >> /opt/authentik/.env
  when: cloudflare_api_email_exists.rc != 0

- name: Check if CLOUDFLARE_API_KEY exists
  shell: grep -q 'CLOUDFLARE_API_KEY' /opt/authentik/.env
  register: cloudflare_api_key_exists
  ignore_errors: true

- name: Inject CLOUDFLARE_API_KEY secret
  shell:
    cmd: echo "CLOUDFLARE_API_KEY={{ lookup('env', 'CLOUDFLARE_API_KEY') }}" >> /opt/authentik/.env
  when: cloudflare_api_key_exists.rc != 0